% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_excel_all.R
\name{read_excel_all}
\alias{read_excel_all}
\title{Read All Cells from Excel Sheets into a Structured Tibble}
\usage{
read_excel_all(path, sheets = NULL, sheets_regex = ".")
}
\arguments{
\item{path}{File path to the Excel workbook.}

\item{sheets}{Optional character vector specifying exact sheet names to read.
Defaults to \code{NULL}, in which case sheets are matched using \code{sheets_regex}.}

\item{sheets_regex}{Regular expression pattern to select sheets when \code{sheets} is \code{NULL}.
Defaults to \code{"."}, matching all sheets.}
}
\value{
A wide-format tibble structured as follows:
  - Each **row** represents a single cell position within a sheet.
  - **Columns** include:
    - \code{sheet_name} (factor): Name of the Excel sheet (ordered as in workbook).
    - \code{row} (integer): Row number from the Excel sheet.
    - Columns named \code{x1}, \code{x2}, \code{x3}, ..., each representing Excel columns
      by their numerical index. Each cell contains the original Excel cell's content,
      or \code{NA} if the cell was empty.

  For example, a cell originally located at sheet "Data", row 3, column B in Excel
  will appear in the resulting tibble in the row where:
  - \code{sheet_name = "Data"}
  - \code{row = 3}
  - \code{x2} contains the cell's contents.
}
\description{
Reads and extracts cell data from specified Excel sheets using \code{tidyxl},
converting it into a structured, wide-format tibble suitable for analysis.
Allows users to select sheets explicitly or using regex patterns.
}
\details{
The function processes Excel sheets selected by name or regex patterns, extracting
non-empty cells using \code{tidyxl::xlsx_cells()}. It handles various Excel data types:
character, numeric, blank, and errors. The output tibble is reshaped into a convenient
wide-format structure, with each Excel sheet represented clearly and uniformly.
}
\examples{
\dontrun{
# Read all sheets in an Excel workbook
read_excel_all("workbook.xlsx")

# Read specific sheets by exact names
read_excel_all("workbook.xlsx", sheets = c("Data", "Summary"))

# Read sheets matching a pattern (e.g., sheets starting with "2024")
read_excel_all("workbook.xlsx", sheets_regex = "^2024")
}

}
